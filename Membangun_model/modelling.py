# -*- coding: utf-8 -*-
"""modelling

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1hU3gnCB1nUS7joP1_q72tfDAv1zngW_g
"""

import os
import shutil
import zipfile
import logging
import joblib
import pandas as pd
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import classification_report

logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')

def load_data(path):
    df = pd.read_csv(path)
    X = df.drop('Churn', axis=1)
    y = df['Churn']
    return X, y

def train_and_save(train_path, model_path):
    X, y = load_data(train_path)
    model = RandomForestClassifier(class_weight='balanced', random_state=42)
    model.fit(X, y)
    joblib.dump(model, model_path)
    logging.info(f"Model saved to {model_path}")
    return model

def evaluate_and_save(model, test_path, report_path):
    X_test, y_test = load_data(test_path)
    y_pred = model.predict(X_test)
    report = classification_report(y_test, y_pred, output_dict=True)
    pd.DataFrame(report).to_csv(report_path)
    logging.info(f"Evaluation report saved to {report_path}")

if __name__ == "__main__":
    os.makedirs("model", exist_ok=True)
    model = train_and_save("namadataset_preprocessing/train.csv", "model/churn_rf.pkl")
    evaluate_and_save(model, "namadataset_preprocessing/test.csv", "model/eval_report.csv")

# Nama folder yang ingin didownload
folder_name = 'model'
zip_name = f'{folder_name}.zip'

# Hapus file zip lama jika ada
if os.path.exists(zip_name):
    os.remove(zip_name)

# Kompres folder menjadi zip
shutil.make_archive(folder_name, 'zip', folder_name)