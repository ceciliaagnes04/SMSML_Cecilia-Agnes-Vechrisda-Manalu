# -*- coding: utf-8 -*-
"""modelling_tuning

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1K49nVF3uVhZNCht6KsRbsNbR3cSHT94d
"""

import os
import shutil
import zipfile
import logging
import pandas as pd
import joblib
from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import GridSearchCV

logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')

def load_data(path):
    df = pd.read_csv(path)
    X = df.drop('Churn', axis=1)
    y = df['Churn']
    return X, y

def tune_and_save(train_path, model_path, result_path):
    X, y = load_data(train_path)
    param_grid = {
        'n_estimators': [50, 100, 200],
        'max_depth': [None, 5, 10],
        'min_samples_split': [2, 5]
    }
    grid = GridSearchCV(RandomForestClassifier(class_weight='balanced', random_state=42),
                        param_grid, cv=3, scoring='f1', n_jobs=-1)
    grid.fit(X, y)
    joblib.dump(grid.best_estimator_, model_path)
    pd.DataFrame(grid.cv_results_).to_csv(result_path)
    logging.info(f"Best model saved to {model_path}, tuning results to {result_path}")

if __name__ == "__main__":
    os.makedirs("model", exist_ok=True)
    tune_and_save("namadataset_preprocessing/train.csv", "model/churn_rf_best.pkl", "model/tuning_results.csv")

# Nama folder yang ingin didownload
folder_name = 'model'
zip_name = f'{folder_name}.zip'

# Hapus file zip lama jika ada
if os.path.exists(zip_name):
    os.remove(zip_name)

# Kompres folder menjadi zip
shutil.make_archive(folder_name, 'zip', folder_name)